import{_ as e,v as t,b as d,R as a}from"./chunks/framework.cfa95d4c.js";const u=JSON.parse('{"title":"Interface: ZplLib","description":"","frontmatter":{},"headers":[],"relativePath":"src/api/zpl.md","filePath":"src/api/zpl.md"}'),o={name:"src/api/zpl.md"},i=a('<h1 id="interface-zpllib" tabindex="-1">Interface: ZplLib <a class="header-anchor" href="#interface-zpllib" aria-label="Permalink to &quot;Interface: ZplLib&quot;">​</a></h1><h3 id="command" tabindex="-1">command <a class="header-anchor" href="#command" aria-label="Permalink to &quot;command&quot;">​</a></h3><p>• <strong>command</strong>: <code>number</code>[]</p><p>@description: command array</p><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>interface/ZplLib.ts:9</p><hr><h3 id="encoding" tabindex="-1">encoding <a class="header-anchor" href="#encoding" aria-label="Permalink to &quot;encoding&quot;">​</a></h3><p>• <strong>encoding</strong>: <code>string</code></p><p>@description: Encoding method, default utf-8</p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>interface/ZplLib.ts:5</p><hr><h3 id="init" tabindex="-1">init <a class="header-anchor" href="#init" aria-label="Permalink to &quot;init&quot;">​</a></h3><p>• <strong>init</strong>: () =&gt; <code>void</code></p><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><p>▸ (): <code>void</code></p><p>@description: init the command</p><h5 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>void</code></p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>interface/ZplLib.ts:15</p><hr><h3 id="setbarcode" tabindex="-1">setBarCode <a class="header-anchor" href="#setbarcode" aria-label="Permalink to &quot;setBarCode&quot;">​</a></h3><p>• <strong>setBarCode</strong>: (<code>x</code>: <code>number</code>, <code>y</code>: <code>number</code>, <code>width</code>: <code>number</code>, <code>height</code>: <code>number</code>, <code>data</code>: <code>string</code>, <code>o</code>: <code>string</code>, <code>e</code>: <code>string</code>, <code>f</code>: <code>string</code>, <code>g</code>: <code>string</code>) =&gt; <code>void</code></p><h4 id="type-declaration-1" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration-1" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><p>▸ (<code>x</code>, <code>y</code>, <code>width</code>, <code>height</code>, <code>data</code>, <code>o</code>, <code>e</code>, <code>f</code>, <code>g</code>): <code>void</code></p><h5 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">x start position</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">y start position</td></tr><tr><td style="text-align:left;"><code>width</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">width of the bar code(in dots)</td></tr><tr><td style="text-align:left;"><code>height</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">height of the bar code(in dots)</td></tr><tr><td style="text-align:left;"><code>data</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the text to print</td></tr><tr><td style="text-align:left;"><code>o</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">(orientation) N = normal R = rotated 90 degrees (clockwise) I = inverted 180 degrees B = read from bottom up, 270 degrees</td></tr><tr><td style="text-align:left;"><code>e</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">(print check digit) N = no Y = yes</td></tr><tr><td style="text-align:left;"><code>f</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">(print interpretation line) N = no Y = yes</td></tr><tr><td style="text-align:left;"><code>g</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">(print interpretation line above code) N = no Y = yes</td></tr></tbody></table><h5 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>void</code></p><p><strong><code>Description</code></strong></p><p>Print the barcode.</p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>interface/ZplLib.ts:39</p><hr><h3 id="setencoding" tabindex="-1">setEncoding <a class="header-anchor" href="#setencoding" aria-label="Permalink to &quot;setEncoding&quot;">​</a></h3><p>• <strong>setEncoding</strong>: (<code>encoding</code>: <code>string</code>) =&gt; <code>void</code></p><h4 id="type-declaration-2" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration-2" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><p>▸ (<code>encoding</code>): <code>void</code></p><p>@description: Set encoding type</p><h5 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>encoding</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">encoding type</td></tr></tbody></table><h5 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>void</code></p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>interface/ZplLib.ts:62</p><hr><h3 id="setprint" tabindex="-1">setPrint <a class="header-anchor" href="#setprint" aria-label="Permalink to &quot;setPrint&quot;">​</a></h3><p>• <strong>setPrint</strong>: () =&gt; <code>void</code></p><h4 id="type-declaration-3" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration-3" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><p>▸ (): <code>void</code></p><p>@description: execute print</p><h5 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>void</code></p><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>interface/ZplLib.ts:19</p><hr><h3 id="setqrcode" tabindex="-1">setQRCode <a class="header-anchor" href="#setqrcode" aria-label="Permalink to &quot;setQRCode&quot;">​</a></h3><p>• <strong>setQRCode</strong>: (<code>x</code>: <code>number</code>, <code>y</code>: <code>number</code>, <code>data</code>: <code>string</code>, <code>model</code>: <code>number</code>, <code>c</code>: <code>number</code>, <code>d</code>: <code>string</code>, <code>e</code>: <code>string</code>) =&gt; <code>void</code></p><h4 id="type-declaration-4" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration-4" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><p>▸ (<code>x</code>, <code>y</code>, <code>data</code>, <code>model</code>, <code>c</code>, <code>d</code>, <code>e</code>): <code>void</code></p><p>@description: print QR code</p><h5 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">x start position</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">y start position</td></tr><tr><td style="text-align:left;"><code>data</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the text to print</td></tr><tr><td style="text-align:left;"><code>model</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">Values: 1 (original) and 2 (enhanced – recommended) Default: 2</td></tr><tr><td style="text-align:left;"><code>c</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">Values:1 to 10 Default:1 on 150 dpi printers ;2 on 200 dpi printers ;3 on 300 dpi printers ;6 on 600 dpi printers</td></tr><tr><td style="text-align:left;"><code>d</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Values: H = ultra-high reliability level Q = high reliability level M = standard level L = high density level Default: Q = if emptyM = invalid values</td></tr><tr><td style="text-align:left;"><code>e</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">Values: 0 - 7 Default: 7</td></tr></tbody></table><h5 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>void</code></p><h4 id="defined-in-6" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-6" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>interface/ZplLib.ts:56</p><hr><h3 id="settext" tabindex="-1">setText <a class="header-anchor" href="#settext" aria-label="Permalink to &quot;setText&quot;">​</a></h3><p>• <strong>setText</strong>: (<code>x</code>: <code>number</code>, <code>y</code>: <code>number</code>, <code>data</code>: <code>string</code>) =&gt; <code>void</code></p><h4 id="type-declaration-5" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration-5" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><p>▸ (<code>x</code>, <code>y</code>, <code>data</code>): <code>void</code></p><p>@description: set text</p><h5 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>x</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">x start position</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;"><code>number</code></td><td style="text-align:left;">y start position</td></tr><tr><td style="text-align:left;"><code>data</code></td><td style="text-align:left;"><code>string</code></td><td style="text-align:left;">the text to print</td></tr></tbody></table><h5 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>void</code></p><h4 id="defined-in-7" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-7" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p>interface/ZplLib.ts:26</p>',81),n=[i];function r(l,c,s,h,p,f){return t(),d("div",null,n)}const x=e(o,[["render",r]]);export{u as __pageData,x as default};
