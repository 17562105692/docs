import{_ as s,v as e,b as a,R as n}from"./chunks/framework.cfa95d4c.js";const A=JSON.parse('{"title":"custom directive","description":"","frontmatter":{},"headers":[],"relativePath":"src/guide/custom-directive.md","filePath":"src/guide/custom-directive.md"}'),t={name:"src/guide/custom-directive.md"},o=n(`<h1 id="custom-directive" tabindex="-1">custom directive <a class="header-anchor" href="#custom-directive" aria-label="Permalink to &quot;custom directive&quot;">​</a></h1><p>Since printease is still being updated, it may not be able to meet all your needs, so a custom instruction operation has been added</p><h2 id="method" tabindex="-1">method <a class="header-anchor" href="#method" aria-label="Permalink to &quot;method&quot;">​</a></h2><ul><li><a href="/printeaseDocs/src/api/customDirective.html#setencoding">setEncoding</a>: Set encoding type</li><li><a href="/printeaseDocs/src/api/customDirective.html#setcommand">setCommand</a>: set custom command</li><li><a href="/printeaseDocs/src/api/customDirective.html#setnewline">setNewLine</a>: new line</li><li><a href="/printeaseDocs/src/api/customDirective.html#getcommand">getCommand</a>: get print command</li><li><a href="/printeaseDocs/src/api/customDirective.html#getbuffer">getBuffer</a>: Get print command (Buffer)</li></ul><h3 id="setcommand" tabindex="-1">setCommand <a class="header-anchor" href="#setcommand" aria-label="Permalink to &quot;setCommand&quot;">​</a></h3><p>Set custom command</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> printease </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">printease</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> cude </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> printease</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">customDirective</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">CustomDirectiveLib</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// cude.setEncoding(&#39;GB18030&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;">cude</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setCommand</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">SIZE 60 mm, 40 mm</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">cude</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setNewLine</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">cude</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setCommand</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">GAP 0 mm, 0 mm</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">cude</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setNewLine</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ....... other commands</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(cude</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getBuffer</span><span style="color:#A6ACCD;">())</span></span></code></pre></div><p>You can pass this <code>buffer</code> data to the printer.</p>`,8),l=[o];function p(c,r,i,m,d,D){return e(),a("div",null,l)}const u=s(t,[["render",p]]);export{A as __pageData,u as default};
